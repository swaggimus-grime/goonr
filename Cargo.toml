[workspace]
resolver = "2"
members = [ "backend", "dataset", "db", "frontend", "kernel", "pipeline", "prefix-sum", "render", "render-bwd", "scene-source", "train", "websplat", "web-cmn", "wgsl" ]

[workspace.package]
edition = "2024"
version = "0.1.0"
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/swaggimus-grime/goonr"

[workspace.dependencies]
anyhow = "1.0.98"
async-trait = "0.1.88"
async-fn-stream = "0.2.2"
futures = "0.3.31"
burn = { git = "https://github.com/tracel-ai/burn", features = [
    'wgpu',
    'autodiff',
] }
burn-cubecl = { git = "https://github.com/tracel-ai/burn" }
burn-ir = { git = "https://github.com/tracel-ai/burn" }
burn-wgpu = { git = "https://github.com/tracel-ai/burn", features = [
    "exclusive-memory-only",
] }
burn-fusion = { git = "https://github.com/tracel-ai/burn" }
bytemuck = { version = "1.23.0", features = ["derive"] }
glam = { version = "0.30.3", features = ["serde"]}
gloo-console = "0.3.0"
hashbrown = "0.15"
image = { version = "0.25", default-features = false, features = [
    'png',
    'webp',
    "jpeg",
    "hdr"
] }
log = "0.4.27"
miette = { version = "7.6.0", features = ["fancy"] }
naga = { version = "26", features = ["wgsl-in", "wgsl-out", "termcolor"] }
naga_oil = { git = "https://github.com/bevyengine/naga_oil", default-features = false }
path-clean = "1.0.1"
rand = "0.9.1"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
thiserror = "2.0.12"
tokio = { version = "1.46.0", default-features = false }
tokio-stream = "0.1"
tokio-util = { version = "0.7.15", features = ["io"] }
tokio_with_wasm = "0.8.6"
tracing = "0.1"
tracing-subscriber = "0.3"
web-sys = { version = "0.3.77" }
wgpu = { version = "25", default-features = false, features = [
    "metal",
    "webgpu",
    "vulkan",
    "naga-ir",
] }
getrandom = { version = "0.3.3", features = ["wasm_js"]}

[patch.crates-io]
wgpu = { git = "https://github.com/ArthurBrussee/wgpu", branch = "25-sg-enable" }
naga = { git = "https://github.com/ArthurBrussee/wgpu", branch = "25-sg-enable" }


[profile.dev]
opt-level = 1
debug = true

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
# debug = true # good for profilers

[workspace.lints.rust]
future_incompatible = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"

[workspace.lints.clippy]
as_ptr_cast_mut = "warn"
await_holding_lock = "warn"
bool_to_int_with_if = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
derive_partial_eq_without_eq = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_enum = "warn"
empty_enum_variants_with_brackets = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
from_iter_instead_of_collect = "warn"
get_unwrap = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
implied_bounds_in_impls = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
infinite_loop = "warn"
into_iter_without_iter = "warn"
invalid_upcast_comparisons = "warn"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_without_into_iter = "warn"
large_digit_groups = "warn"
large_include_file = "warn"
large_stack_arrays = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_assert = "warn"
manual_clamp = "warn"
manual_instant_elapsed = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_bool = "warn"
match_on_vec_items = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
mismatching_type_param_order = "warn"
missing_enforced_import_renames = "warn"
missing_safety_doc = "warn"
mixed_attributes_style = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
negative_feature_names = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
print_stderr = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
pub_underscore_fields = "warn"
pub_without_shorthand = "warn"
rc_mutex = "warn"
readonly_write_lock = "warn"
redundant_type_annotations = "warn"
ref_as_ptr = "warn"
ref_option_ref = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
single_char_pattern = "warn"
single_match_else = "warn"
str_split_at_newline = "warn"
str_to_string = "warn"

string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_command_arg_space = "warn"
suspicious_xor_used_as_pow = "warn"
todo = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
tuple_array_conversions = "warn"
unchecked_duration_subtraction = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
uninhabited_references = "warn"
uninlined_format_args = "warn"
unnecessary_safety_doc = "warn"
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unused_peekable = "warn"
unused_rounding = "warn"
unused_self = "warn"
use_self = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
wildcard_dependencies = "warn"
wildcard_imports = "warn"
zero_sized_map_values = "warn"
redundant_clone = "warn"

iter_over_hash_type = "warn"
missing_assert_message = "warn"
should_panic_without_expect = "warn"
unwrap_used = "warn"


# Too many false positives
significant_drop_tightening = "allow"

# For WASM this is quite common
arc_with_non_send_sync = "allow"

# TODO: More docs
missing_errors_doc = "allow"

# # These are meh:
# Annoying: Some functions need Box so don't want to force user to to do this.
# unnecessary_box_returns = "allow"
# Annoying: Some arms logically are different even if they do the same thing.
# match_same_arms = "allow"
# Annoying: operators are fine.
# string_add = "allow"
# string_add_assign = "allow"
# Annoying: I like big functuions what can I say.
too_many_lines = "allow"
too_many_arguments = "allow"
needless_range_loop = "allow"

# This doesn't quite work with Burn:
single_range_in_vec_init = "allow"
